#ifndef __HALL_H__
#define __HALL_H__

#include "fsl_gpio.h"
#include "fsl_port.h"
#include "bldc.h"
#include "encoder.h"
#include "output.h"



/* PID struct*/
typedef struct 
{
  __IO int32_t  SetPoint;                                 //ï¿½è¶¨Ä¿ï¿½ï¿½ Desired Value
  __IO long     SumError;                                 //ï¿½ï¿½ï¿½ï¿½Û¼ï¿?
  __IO float    Proportion;                               //ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ Proportional Const
  __IO float    Integral;                                 //ï¿½ï¿½ï¿½Ö³ï¿½ï¿½ï¿½ Integral Const
  __IO float    Derivative;                               //Î¢ï¿½Ö³ï¿½ï¿½ï¿½ Derivative Const
  __IO int      LastError;                                //Error[-1]
  __IO int      PrevError;                                //Error[-2]
}PID_TypeDef;


   


#define  P_DATA      0.1f//0.85f                                // Pï¿½ï¿½ï¿½ï¿½
#define  I_DATA      0.01//0.055f                                // Iï¿½ï¿½ï¿½ï¿½
#define  D_DATA      0.2//0.558f                                 // Dï¿½ï¿½ï¿½ï¿½

#define P_ANGLE_DATA        0.35f   		//ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
#define I_ANGLE_DATA		0.002f
#define D_ANGLE_DATA		0.35f

#define abs(x)    ((x)>0?(x):-(x))
#define  TARGET_PULSE  1000

extern int32_t array_data[4];

/* ï¿½ï¿½Õ¹ï¿½ï¿½ï¿½ï¿½ ------------------------------------------------------------------*/


extern uint8_t  arithmetic_flag ;


extern int32_t PID_Result ;

extern uint32_t Time_CNT ;
extern uint32_t ABZ_CNT;

extern int32_t PID_Result ;













#endif 
